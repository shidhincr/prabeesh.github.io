<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Flask | This is One of the Solutions]]></title>
  <link href="http://blog.prabeeshk.com/blog/categories/flask/atom.xml" rel="self"/>
  <link href="http://blog.prabeeshk.com/"/>
  <updated>2015-02-24T23:22:00+05:30</updated>
  <id>http://blog.prabeeshk.com/</id>
  <author>
    <name><![CDATA[Prabeesh K]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Paint App Using Flask With MongoDB]]></title>
    <link href="http://blog.prabeeshk.com/blog/2013/03/31/paint-app-using-flask-with-mongodb/"/>
    <updated>2013-03-31T21:53:00+05:30</updated>
    <id>http://blog.prabeeshk.com/blog/2013/03/31/paint-app-using-flask-with-mongodb</id>
    <content type="html"><![CDATA[<p>Here the paint app is modified using with a new database system. The MongoDB, is a famous NoSQL database system. The NoSQL database is a simple lightweight mechanism. It provides high scalability and availability. It provides horizontal scaling of data. This system redefined the database concept from the traditional relational database system.
   MongoDB is an open-source, document-oriented database designed for ease of development and scaling. The main features of MongoDB are flexibility, power, speed, and ease of use. The MongoDB can installed in local machine by following the instructions from <a href="http://docs.mongodb.org/manual/installation/">official website</a></p>

<p>Some commands used in the MonoDB operations are given below:</p>

<p>  <code>db</code> :- After starting the mongo shell your session will use the test database for context, by default. At any time issue the above operation at the mongo to report the current database.
  <code>show dbs</code> :- Display the list of databases from the mongo shell.
  <code>use mydb</code> :- Switch to a new database named mydb.
  <code>help</code> :- At any point you can access help for the mango shell using thisoperation.
  <code>db.things.insert()</code> :- Insert documents into the collection things.When you insert the first document, the mangod will create both the database and the things collection.
  <code>show collections</code> :- Displays the available collections in the database.
  <code>db.things.find()</code> :- Finds the documents in the collection. The documents to be found can be specified through arguments of the find function. The cursor of the MongoDB displays only the first 20 output documents. it command is used to display the rest of the documents.</p>

<p>The source code is available in <a href="https://github.com/prabeesh/Paintapp-Javascript-Canvas-Flask-MongoDB">github</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Paint App Using JavaScript and Canvas]]></title>
    <link href="http://blog.prabeeshk.com/blog/2013/03/30/paint-app-using-javascript-and-canvas/"/>
    <updated>2013-03-30T12:44:00+05:30</updated>
    <id>http://blog.prabeeshk.com/blog/2013/03/30/paint-app-using-javascript-and-canvas</id>
    <content type="html"><![CDATA[<p>An application to draw simple drawings using lines, rectangles and circles in different colours.</p>

<p><img class="center" src="/images/paint.png" width="850" height="350" title="&lsquo;image&rsquo; &lsquo;images&rsquo;" ></p>

<p>The application is developed using JavaScript and HTML5. The canvas feature in HTML5 is used for providing a drawable region. The JavaScript is used to handle drawing functions in these region. The select button to select the different tools to draw. The colour picker is made using the button option. The script basically listen three mouse events mousedown, mousemove and mouseup. This application implemented using two different frameworks Google App Engine and Flask.</p>

<h3>Application with saving facility</h3>

<p>This is done by saving values about each object needed to regenerate the same drawing. When we click the save button the data is transferred to the server as a json string where it is stored along with a name provided by the user. Simply regenerate the drawing using the data received from the server.</p>

<p>In Google App Engine Google data storage is used for data storage. But in Flask sqlite3 is used for data storage.</p>

<p>Source code: <a href="https://github.com/prabeesh/Paintapp-Javascript-Canvas-GAE">App with GAE</a> and <a href="https://github.com/prabeesh/Paintapp-Javascript-Canvas-Flask">App with Flask</a></p>

<p>The app is deployed in appspot.com, You can find the application <a href="http://prabs-paint.appspot.com/">here</a></p>
]]></content>
  </entry>
  
</feed>
